const { getRandomInt, shuffleArray } = require('../utils/helpers');

class QuestionGenerator {
    constructor() {
        this.usedQuestions = new Set();
        this.maxCacheSize = 1000;
    }

    generateAdditionQuestion() {
        let attempts = 0;
        let questionKey;
        let num1, num2;

        do {
            num1 = getRandomInt(10, 99);
            num2 = getRandomInt(10, 99);
            questionKey = `${num1}+${num2}`;
            attempts++;
        } while (this.usedQuestions.has(questionKey) && attempts < 50);

        const correct = num1 + num2;
        if (this.usedQuestions.size >= this.maxCacheSize) {
            this.clearUsedQuestions();
        }
        this.usedQuestions.add(questionKey);

        const distractors = this.generateDistractors(correct);
        const options = [correct, ...distractors];
        shuffleArray(options);

        return {
            question: `${num1} + ${num2}`,
            options,
            correct,
            type: 'addition',
            difficulty: this.calculateDifficulty(num1, num2)
        };
    }

    generateDistractors(correct) {
        const distractors = new Set();
        const candidates = [
            correct + getRandomInt(1, 5),
            correct - getRandomInt(1, 5),
            correct + getRandomInt(10, 20),
            correct - getRandomInt(6, 15),
            correct + getRandomInt(15, 30)
        ];

        for (const candidate of candidates) {
            if (candidate > 0 && candidate !== correct && distractors.size < 3) {
                distractors.add(candidate);
            }
        }

        while (distractors.size < 3) {
            const random = correct + getRandomInt(-25, 25);
            if (random > 0 && random !== correct) {
                distractors.add(random);
            }
        }

        return Array.from(distractors).slice(0, 3);
    }

    calculateDifficulty(num1, num2) {
        const sum = num1 + num2;
        if (sum <= 50) return 'easy';
        if (sum <= 120) return 'medium';
        return 'hard';
    }

    clearUsedQuestions() {
        this.usedQuestions.clear();
    }
}

module.exports = QuestionGenerator;
